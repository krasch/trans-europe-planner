html {
  height: 100%;
}

body {
  height: 100%;
  width: 100%;

  margin: 0;
  padding: 0;
}

/***********************************************
Overall layout
************************************************/

body {
  /* this is a grid simply to conform with planner, which is laid out in a grid, too */
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows:
    1fr /* main content */
    2rem; /* footer */
  grid-template-areas:
    "main"
    "footer";
}

#map {
  grid-area: main;
}

main {
  grid-area: main;
  z-index: 2;
}

footer {
  grid-area: footer;
  overflow-x: hidden; /* todo move into footer */
}

/***********************************************
Layout details
************************************************/

main {
  --item-width: min(95%, 400px);
  --gap: 1rem;

  /* by default (=on mobile), we want only one item to fit per row */
  width: var(--item-width);

  /* location of this container in its grid cell */
  align-self: center;
  justify-self: center;

  display: flex;
  flex-wrap: wrap;
  /* CSS magic to get us a different ordering on desktop and mobile */
  flex-direction: row-reverse;

  /* horizontal centering of the items */
  justify-content: center;

  padding-top: 2rem;
  padding-bottom: 2rem;
  gap: var(--gap);
}

main > * {
  /* every flex item has the same width */
  box-sizing: border-box;
  width: var(--item-width);
}

@media only screen and (min-width: 1000px) {
  /* on desktop, can have two items per row */
  main {
    width: calc(2 * var(--item-width) + var(--gap));
  }

  /* add a pseudo-child to create a blank space in the first row */
  main::before {
    content: "";
    width: var(--item-width);
  }
}

main > * {
  height: fit-content; /* every flex item takes up the height it needs but not more */
  padding: 1rem;

  /* every flex item is also a flexbox */
  display: flex;
  flex-direction: column;
  gap: 0.75rem;

  align-items: center;
  justify-content: center;
  text-align: center;
}

#logo img {
  max-height: 6rem;
  padding: 1rem;
}

#showcase {
  /* this is the tallest item and it is always in the last row of the flexbox
     -> if need scrollbar, let's do it here */
  overflow-y: auto;
}

/***********************************************
 Layout the showcase (GIF preview etc)
************************************************/

#showcase #video-container {
  padding: 0.75rem;

  display: flex;
  flex-direction: column;
  gap: 0.25rem;

  align-items: center;
}

#showcase #video-container img {
  width: 100%; /* image should fit into the space it has */
}

#showcase #pagination {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;

  align-items: center;
  justify-content: center;
}

#showcase #pagination img {
  height: 0.5rem;
  width: 0.5rem;
}

/***********************************************
 Layout the form
************************************************/

select,
button {
  height: 2rem;
  font-size: 1rem;
  max-width: 100%; /* otherwise select can become too wide on small displays */
}

button {
  padding-left: 1rem;
  padding-right: 1rem;
}

/***********************************************
Styling
************************************************/

main > * {
  background-color: var(--color-dark);
  color: var(--color-light);
  border-radius: 20px;
  opacity: 95%;
}

#logo > img {
  filter: var(--filter-white);
}

a {
  color: var(--color-light);
}

#showcase #video-container {
  background-color: var(--color-light);
  color: var(--color-dark);
  border-radius: 10px;
  opacity: 95%;
}

#showcase #pagination img {
  filter: var(--filter-dark);
}

select {
  background-color: var(--color-light);
  color: var(--color-dark);
  border-radius: 5px;
}

button {
  cursor: pointer;

  background-color: #289929;
  color: var(--color-light);

  border: 0;
  border-radius: 5px;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}

button:hover {
  background-color: #2faf30;
}
